name: tg2go

services:
  db:
    image: postgres:15
    container_name: tg2go_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - tg2go_network
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - ./data/postgresql/data:/var/lib/postgresql/data

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tg2go_bot
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./data/logs/bot:/usr/src/app/data/logs/bot
      - ./data/images:/usr/src/app/data/images
    networks:
      - tg2go_network
    stdin_open: true              # Keeps STDIN open
    tty: true                     # Allocates a pseudo-TTY
    command: python -m tg2go

networks:
  tg2go_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
