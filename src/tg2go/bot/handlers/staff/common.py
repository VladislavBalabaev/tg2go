from dataclasses import dataclass
from enum import Enum

from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


class StaffAction(str, Enum):
    Cancel = "–û—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å"

    Activate = "–í–∫–ª—é—á–∏—Ç—å"
    Deactivate = "–í—ã–∫–ª—é—á–∏—Ç—å"
    Settings = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"

    Categories = "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏"
    Goods = "–ü—Ä–æ–¥—É–∫—Ç—ã"

    AddCategory = "–î–æ–±–∞–≤–∏—Ç—å"
    RemoveCategory = "–£–¥–∞–ª–∏—Ç—å"
    RenameCategory = "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å"

    AddGood = "–î–æ–±–∞–≤–∏—Ç—å"
    # RemoveGood = "–£–¥–∞–ª–∏—Ç—å"
    # ChangeGood = "–ò–∑–º–µ–Ω–∏—Ç—å"


class StaffCallbackData(CallbackData, prefix="blocking"):
    action: StaffAction
    chat_id: int


def StaffKeyboard(actions: list[StaffAction], chat_id: int) -> InlineKeyboardMarkup:
    def Button(action: StaffAction) -> InlineKeyboardButton:
        nonlocal chat_id

        return InlineKeyboardButton(
            text=action.value,
            callback_data=StaffCallbackData(action=action, chat_id=chat_id).pack(),
        )

    buttons: list[InlineKeyboardButton] = [Button(a) for a in actions]

    return InlineKeyboardMarkup(inline_keyboard=[buttons])


class StaffHeaderText(str, Enum):
    Active = "üü¢ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç\n\n–ß—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞, –≤—ã–∫–ª—é—á–∏—Ç–µ –µ–≥–æ"
    Inactive = "üî¥ –ë–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    Category = ""


@dataclass
class StaffMenu:
    text: StaffHeaderText
    reply_markup: InlineKeyboardMarkup | None
