from enum import Enum

from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from tg2go.bot.handlers.staff.menus.menu import Menu
from tg2go.bot.lifecycle.active import bot_state


class StaffAction(str, Enum):
    Activate = "–í–∫–ª—é—á–∏—Ç—å"
    Deactivate = "–í—ã–∫–ª—é—á–∏—Ç—å"
    Settings = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
    Cancel = "–û—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å"


class StaffCallbackData(CallbackData, prefix="s"):
    action: StaffAction
    chat_id: int


class StaffButtonFactory:
    def __init__(self, chat_id: int):
        self.chat_id = chat_id

    def Get(self, action: StaffAction) -> InlineKeyboardButton:
        return InlineKeyboardButton(
            text=action.value,
            callback_data=StaffCallbackData(
                action=action,
                chat_id=self.chat_id,
            ).pack(),
        )


def StaffMenu(chat_id: int) -> Menu:
    factory = StaffButtonFactory(chat_id)

    if bot_state.active:
        text = "üü¢ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç\n\n"
        "–ß—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞, —Å–ø–µ—Ä–≤–∞ –≤—ã–∫–ª—é—á–∏—Ç–µ –µ–≥–æ"
        buttons = [
            [factory.Get(StaffAction.Deactivate)],
            [factory.Get(StaffAction.Cancel)],
        ]
    else:
        text = "üî¥ –ë–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        buttons = [
            [factory.Get(StaffAction.Activate)],
            [factory.Get(StaffAction.Settings)],
            [factory.Get(StaffAction.Cancel)],
        ]

    markup = InlineKeyboardMarkup(inline_keyboard=buttons)

    return Menu(
        text=text,
        reply_markup=markup,
    )

